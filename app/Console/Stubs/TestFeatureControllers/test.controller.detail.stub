<?php

namespace Tests\Feature\Domains\{{domainCaps}};

use Laravel\Lumen\Testing\DatabaseMigrations;
use Tests\Feature\TestCaseFeature;

class {{domainCaps}}DetailControllerTest extends TestCaseFeature
{
    use DatabaseMigrations;

    /**
     * @covers \App\Domains\{{domainCaps}}\Http\Controllers\{{domainCaps}}DetailController::__construct
     * @covers \App\Domains\{{domainCaps}}\Http\Controllers\{{domainCaps}}DetailController::process
     * @covers \App\Domains\{{domainCaps}}\Businesses\{{domainCaps}}DetailBusiness::__construct
     * @covers \App\Domains\{{domainCaps}}\Businesses\{{domainCaps}}DetailBusiness::process
     */
    public function testDetail()
    {
        $data = [
            'client_id' => 1,
            'client_name' => 'Client Test',
            'client_slug' => 'test',
            'sector_id' => 1,
            'sector_initials' => 'Sector Initials',
            'emissions' => 1,
            'solved' => 2,
            'not_read' => 3,
            'efficiency' => 4.1,
            'engagement' => 5.1,
            'users' => [
                [
                    'user_id' => 1,
                    'user_name' => 'User Test',
                    'user_email' => 'email@user.com',
                ]
            ],
            'location' => [
                [
                    'lat' => -22.970722,
                    'lon' => -43.182365,
                ]
            ],
        ];

        $this->json('POST', '/{{domainOriginal}}/add', $data, $this->header);

        $response = json_decode($this->response->getContent(), true);

        sleep(1);
        $this->json('GET', '/{{domainOriginal}}/detail/' . $response['data']['id'], [], $this->header);

        $response = json_decode($this->response->getContent(), true);

        $this->assertEquals(200, $this->response->getStatusCode());
        $this->assertEquals($data['client_name'], $response['data']['client_name']);
    }

    /**
     * @covers \App\Domains\{{domainCaps}}\Http\Controllers\{{domainCaps}}DetailController::__construct
     */
    public function testDetailIdInvalid()
    {
        $this->json('GET', '/{{domainOriginal}}/detail/123', [], $this->header);

        $response = json_decode($this->response->getContent(), true);

        $this->assertEquals(404, $this->response->getStatusCode());
        $this->assertEquals('Route not found', $response['message']);
    }

    /**
     * @covers \App\Domains\{{domainCaps}}\Http\Controllers\{{domainCaps}}DetailController::__construct
     * @covers \App\Domains\{{domainCaps}}\Http\Controllers\{{domainCaps}}DetailController::process
     * @covers \App\Domains\{{domainCaps}}\Businesses\{{domainCaps}}DetailBusiness::__construct
     * @covers \App\Domains\{{domainCaps}}\Businesses\{{domainCaps}}DetailBusiness::process
     */
    public function testDetailNotFound()
    {
        $this->json('GET', '/{{domainOriginal}}/detail/01E492KQX6BW62YEA45SGWRXYQ', [], $this->header);

        $response = json_decode($this->response->getContent(), true);

        $this->assertEquals(404, $this->response->getStatusCode());
        $this->assertEquals('Data not found', $response['message']);
    }
}
