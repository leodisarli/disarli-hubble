<?php

namespace Tests\Feature\Domains\{{domainCaps}};

use Laravel\Lumen\Testing\DatabaseMigrations;
use Tests\Feature\TestCaseFeature;

class {{domainCaps}}AddControllerTest extends TestCaseFeature
{
    use DatabaseMigrations;

    /**
     * @covers \App\Domains\{{domainCaps}}\Http\Controllers\{{domainCaps}}AddController::__construct
     */
    public function testRequiredFields()
    {
        $this->json('POST', '/{{domainOriginal}}/add', [], $this->header);

        $response = [
            'message' => 'A validation error occurrs',
            'data' => [
                'name' => [
                    'The name field is required.'
                ],
                'age' => [
                    'The age field is required.'
                ],
                'origin_sector' => [
                    'The origin sector field is required.'
                ],
                'visits' => [
                    'The visits field is required.'
                ],
            ]
        ];

        $result = json_decode($this->response->getContent(), true);

        $this->assertEquals(422, $this->response->getStatusCode());
        $this->assertArrayHasKey('message', $result);
        $this->assertEquals('A validation error occurrs', $result['message']);
        $this->assertEquals($response['data']['name'], $result['data']['name']);
        $this->assertEquals($response['data']['age'], $result['data']['age']);
        $this->assertEquals($response['data']['origin_sector'], $result['data']['origin_sector']);
        $this->assertEquals($response['data']['visits'], $result['data']['visits']);
    }

    /**
     * @covers \App\Domains\{{domainCaps}}\Http\Controllers\{{domainCaps}}AddController::__construct
     * @covers \App\Domains\{{domainCaps}}\Http\Controllers\{{domainCaps}}AddController::process
     * @covers \App\Domains\{{domainCaps}}\Businesses\{{domainCaps}}AddBusiness::__construct
     * @covers \App\Domains\{{domainCaps}}\Businesses\{{domainCaps}}AddBusiness::process
     */
    public function testAdd{{domainCaps}}()
    {
        $data = [
            'name' => 'test',
            'age' => 18,
            'origin_sector' => 'test',
            'visits' => 16,
        ];

        $this->call('options', '/{{domainOriginal}}/add', [], $this->header);
        $this->json('POST', '/{{domainOriginal}}/add', $data, $this->header);

        $response = json_decode($this->response->getContent(), true);

        $this->assertEquals(201, $this->response->getStatusCode());
        $this->assertEquals($data['name'], $response['data']['name']);
    }
}
