<?php

namespace Tests\Feature\Domains\{{domainCaps}};

use Laravel\Lumen\Testing\DatabaseMigrations;
use Tests\Feature\TestCaseFeature;

class {{domainCaps}}EditControllerTest extends TestCaseFeature
{
    use DatabaseMigrations;

    /**
     * @covers \App\Domains\{{domainCaps}}\Http\Controllers\{{domainCaps}}EditController::__construct
     * @covers \App\Domains\{{domainCaps}}\Http\Controllers\{{domainCaps}}EditController::process
     * @covers \App\Domains\{{domainCaps}}\Businesses\{{domainCaps}}EditBusiness::__construct
     * @covers \App\Domains\{{domainCaps}}\Businesses\{{domainCaps}}EditBusiness::process
     */
    public function testEdit{{domainCaps}}()
    {
        $data = [
            'name' => 'test',
            'age' => 18,
            'origin_sector' => 'test',
            'visits' => 16,
        ];

        $this->json('POST', '/{{domainOriginal}}/add', $data, $this->header);
        $response = json_decode($this->response->getContent(), true);

        sleep(1);
        $this->json(
            'PATCH',
            '/{{domainOriginal}}/edit/' . $response['data']['id'],
            ['name' => 'test2'],
            $this->header
        );

        $response = json_decode($this->response->getContent(), true);

        $this->assertEquals(200, $this->response->getStatusCode());
        $this->assertEquals('test2', $response['data']['name']);
    }

    /**
     * @covers \App\Domains\{{domainCaps}}\Http\Controllers\{{domainCaps}}EditController::__construct
     * @covers \App\Domains\{{domainCaps}}\Http\Controllers\{{domainCaps}}EditController::process
     * @covers \App\Domains\{{domainCaps}}\Businesses\{{domainCaps}}EditBusiness::__construct
     * @covers \App\Domains\{{domainCaps}}\Businesses\{{domainCaps}}EditBusiness::process
     */
    public function testEdit{{domainCaps}}NotFound()
    {
        $this->json(
            'PATCH',
            '/{{domainOriginal}}/edit/01E492KQX6BW62YEA45SGWRXYQ',
            ['name' => 'test2'],
            $this->header
        );

        $response = json_decode($this->response->getContent(), true);

        $this->assertEquals(404, $this->response->getStatusCode());
        $this->assertEquals('Data not found', $response['message']);
    }
}
